(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[39],{

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/farms/activities/harvest-crop-task.vue?vue&type=script&lang=js&":
/*!******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/pages/farms/activities/harvest-crop-task.vue?vue&type=script&lang=js& ***!
  \******************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var vuex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vuex */ \"./node_modules/vuex/dist/vuex.esm.js\");\n/* harmony import */ var _stores_stubs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../stores/stubs */ \"./resources/js/stores/stubs/index.js\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'HarvestCropTask',\n  props: ['crop'],\n  data() {\n    return {\n      task: Object.assign({}, _stores_stubs__WEBPACK_IMPORTED_MODULE_1__[\"StubTask\"])\n    };\n  },\n  computed: {\n    ...Object(vuex__WEBPACK_IMPORTED_MODULE_0__[\"mapGetters\"])({\n      areas: 'getAllAreas'\n    })\n  },\n  mounted() {\n    this.fetchAreas();\n    this.task.harvest_type = 'PARTIAL';\n    this.task.produced_unit = 'Gr';\n  },\n  methods: {\n    ...Object(vuex__WEBPACK_IMPORTED_MODULE_0__[\"mapActions\"])(['fetchAreas', 'harvestCrop']),\n    validateBeforeSubmit() {\n      this.$validator.validateAll().then(result => {\n        if (result) {\n          this.create();\n        }\n      });\n    },\n    create() {\n      this.task.obj_uid = this.crop.uid;\n      this.harvestCrop(this.task).then(() => this.$parent.$emit('close')).catch(() => this.$toasted.error('Error in harvest crop submission'));\n    }\n  }\n});\n\n//# sourceURL=webpack:///./resources/js/pages/farms/activities/harvest-crop-task.vue?./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options");

/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/pug-plain-loader/index.js!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/farms/activities/harvest-crop-task.vue?vue&type=template&id=905e5cd2&lang=pug&":
/*!*************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/pug-plain-loader!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/pages/farms/activities/harvest-crop-task.vue?vue&type=template&id=905e5cd2&lang=pug& ***!
  \*************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"harvest-crop-task\" }, [\n    _c(\"div\", { staticClass: \"modal-header\" }, [\n      _c(\n        \"h4\",\n        [\n          _c(\"translate\", [_vm._v(\"Yig'im-terim\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { staticClass: \"identifier\" }, [\n            _vm._v(_vm._s(_vm.crop.batch_id))\n          ])\n        ],\n        1\n      )\n    ]),\n    _c(\n      \"div\",\n      { staticClass: \"modal-body\" },\n      [\n        _c(\n          \"b-form\",\n          {\n            on: {\n              submit: function($event) {\n                $event.preventDefault()\n                return _vm.validateBeforeSubmit($event)\n              }\n            }\n          },\n          [\n            _c(\"div\", { staticClass: \"form-row\" }, [\n              _c(\"div\", { staticClass: \"col-6\" }, [\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\n                    \"label\",\n                    { attrs: { for: \"source_area_id\" } },\n                    [\n                      _c(\"translate\", [\n                        _vm._v(\"Yig'im-terim uchun maydonni tanlang\")\n                      ])\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"validate\",\n                          rawName: \"v-validate\",\n                          value: \"required\",\n                          expression: \"'required'\"\n                        },\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.task.source_area_id,\n                          expression: \"task.source_area_id\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      class: {\n                        input: true,\n                        \"text-danger\": _vm.errors.has(\"source_area_id\")\n                      },\n                      attrs: { id: \"source_area_id\", name: \"source_area_id\" },\n                      on: {\n                        change: function($event) {\n                          var $$selectedVal = Array.prototype.filter\n                            .call($event.target.options, function(o) {\n                              return o.selected\n                            })\n                            .map(function(o) {\n                              var val = \"_value\" in o ? o._value : o.value\n                              return val\n                            })\n                          _vm.$set(\n                            _vm.task,\n                            \"source_area_id\",\n                            $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          )\n                        }\n                      }\n                    },\n                    [\n                      _c(\n                        \"option\",\n                        { attrs: { value: \"\" } },\n                        [_c(\"translate\", [_vm._v(\"Iltimos maydonni tanlang\")])],\n                        1\n                      ),\n                      _vm._l(_vm.areas, function(area) {\n                        return _c(\"option\", { domProps: { value: area.uid } }, [\n                          _vm._v(_vm._s(area.name))\n                        ])\n                      })\n                    ],\n                    2\n                  ),\n                  _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.errors.has(\"source_area_id\"),\n                          expression: \"errors.has('source_area_id')\"\n                        }\n                      ],\n                      staticClass: \"help-block text-danger\"\n                    },\n                    [_vm._v(_vm._s(_vm.errors.first(\"source_area_id\")))]\n                  )\n                ])\n              ]),\n              _c(\"div\", { staticClass: \"col-6\" }, [\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\n                    \"label\",\n                    { attrs: { for: \"harvest_type\" } },\n                    [_c(\"translate\", [_vm._v(\"Yig'im-terim turini tanlang\")])],\n                    1\n                  ),\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"validate\",\n                          rawName: \"v-validate\",\n                          value: \"required\",\n                          expression: \"'required'\"\n                        },\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.task.harvest_type,\n                          expression: \"task.harvest_type\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      class: {\n                        input: true,\n                        \"text-danger\": _vm.errors.has(\"harvest_type\")\n                      },\n                      attrs: { id: \"harvest_type\", name: \"harvest_type\" },\n                      on: {\n                        change: function($event) {\n                          var $$selectedVal = Array.prototype.filter\n                            .call($event.target.options, function(o) {\n                              return o.selected\n                            })\n                            .map(function(o) {\n                              var val = \"_value\" in o ? o._value : o.value\n                              return val\n                            })\n                          _vm.$set(\n                            _vm.task,\n                            \"harvest_type\",\n                            $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          )\n                        }\n                      }\n                    },\n                    [\n                      _c(\n                        \"option\",\n                        { attrs: { value: \"PARTIAL\" } },\n                        [_c(\"translate\", [_vm._v(\"Qisman\")])],\n                        1\n                      ),\n                      _c(\n                        \"option\",\n                        { attrs: { value: \"ALL\" } },\n                        [_c(\"translate\", [_vm._v(\"To'liq\")])],\n                        1\n                      )\n                    ]\n                  ),\n                  _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.errors.has(\"harvest_type\"),\n                          expression: \"errors.has('harvest_type')\"\n                        }\n                      ],\n                      staticClass: \"help-block text-danger\"\n                    },\n                    [_vm._v(_vm._s(_vm.errors.first(\"harvest_type\")))]\n                  )\n                ])\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"form-row\" }, [\n              _c(\"div\", { staticClass: \"col-6\" }, [\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\n                    \"label\",\n                    { attrs: { for: \"produced_quantity\" } },\n                    [_c(\"translate\", [_vm._v(\"Miqdori\")])],\n                    1\n                  ),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: \"required|decimal\",\n                        expression: \"'required|decimal'\"\n                      },\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.task.produced_quantity,\n                        expression: \"task.produced_quantity\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    class: {\n                      input: true,\n                      \"text-danger\": _vm.errors.has(\"produced_quantity\")\n                    },\n                    attrs: {\n                      id: \"produced_quantity\",\n                      type: \"text\",\n                      name: \"produced_quantity\"\n                    },\n                    domProps: { value: _vm.task.produced_quantity },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(\n                          _vm.task,\n                          \"produced_quantity\",\n                          $event.target.value\n                        )\n                      }\n                    }\n                  }),\n                  _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.errors.has(\"produced_quantity\"),\n                          expression: \"errors.has('produced_quantity')\"\n                        }\n                      ],\n                      staticClass: \"help-block text-danger\"\n                    },\n                    [_vm._v(_vm._s(_vm.errors.first(\"produced_quantity\")))]\n                  )\n                ])\n              ]),\n              _c(\"div\", { staticClass: \"col-6\" }, [\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\n                    \"label\",\n                    { attrs: { for: \"units\" } },\n                    [_c(\"translate\", [_vm._v(\"Birliklari\")])],\n                    1\n                  ),\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"validate\",\n                          rawName: \"v-validate\",\n                          value: \"required\",\n                          expression: \"'required'\"\n                        },\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.task.produced_unit,\n                          expression: \"task.produced_unit\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      class: {\n                        input: true,\n                        \"text-danger\": _vm.errors.has(\"produced_unit\")\n                      },\n                      attrs: { id: \"produced_unit\", name: \"produced_unit\" },\n                      on: {\n                        change: function($event) {\n                          var $$selectedVal = Array.prototype.filter\n                            .call($event.target.options, function(o) {\n                              return o.selected\n                            })\n                            .map(function(o) {\n                              var val = \"_value\" in o ? o._value : o.value\n                              return val\n                            })\n                          _vm.$set(\n                            _vm.task,\n                            \"produced_unit\",\n                            $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          )\n                        }\n                      }\n                    },\n                    [\n                      _c(\n                        \"option\",\n                        { attrs: { value: \"Gr\" } },\n                        [_c(\"translate\", [_vm._v(\"Gramm\")])],\n                        1\n                      ),\n                      _c(\n                        \"option\",\n                        { attrs: { value: \"Kg\" } },\n                        [_c(\"translate\", [_vm._v(\"Kilogram\")])],\n                        1\n                      )\n                    ]\n                  ),\n                  _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.errors.has(\"produced_unit\"),\n                          expression: \"errors.has('produced_unit')\"\n                        }\n                      ],\n                      staticClass: \"help-block text-danger\"\n                    },\n                    [_vm._v(_vm._s(_vm.errors.first(\"produced_unit\")))]\n                  )\n                ])\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\n                \"label\",\n                { attrs: { for: \"notes\" } },\n                [_c(\"translate\", [_vm._v(\"Izohlar\")])],\n                1\n              ),\n              _c(\"textarea\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.task.notes,\n                    expression: \"task.notes\"\n                  }\n                ],\n                staticClass: \"form-control\",\n                class: { input: true, \"text-danger\": _vm.errors.has(\"notes\") },\n                attrs: {\n                  id: \"notes\",\n                  type: \"text\",\n                  placeholder:\n                    \"Yig'im-terimning ixtiyoriy izohlarini qoldiring\",\n                  name: \"notes\",\n                  rows: \"2\"\n                },\n                domProps: { value: _vm.task.notes },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.task, \"notes\", $event.target.value)\n                  }\n                }\n              }),\n              _c(\n                \"span\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.errors.has(\"notes\"),\n                      expression: \"errors.has('notes')\"\n                    }\n                  ],\n                  staticClass: \"help-block text-danger\"\n                },\n                [_vm._v(_vm._s(_vm.errors.first(\"notes\")))]\n              )\n            ]),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-addon btn-primary float-right\",\n                  attrs: { type: \"submit\" }\n                },\n                [\n                  _c(\"i\", { staticClass: \"fas fa-check\" }),\n                  _c(\"translate\", [_vm._v(\"OK\")])\n                ],\n                1\n              ),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-addon btn-default\",\n                  staticStyle: { cursor: \"pointer\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.$parent.$emit(\"close\")\n                    }\n                  }\n                },\n                [\n                  _c(\"i\", { staticClass: \"fas fa-times\" }),\n                  _c(\"translate\", [_vm._v(\"Bekor qilish\")])\n                ],\n                1\n              )\n            ])\n          ]\n        )\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n\n//# sourceURL=webpack:///./resources/js/pages/farms/activities/harvest-crop-task.vue?./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/pug-plain-loader!./node_modules/vue-loader/lib??vue-loader-options");

/***/ }),

/***/ "./resources/js/pages/farms/activities/harvest-crop-task.vue":
/*!*******************************************************************!*\
  !*** ./resources/js/pages/farms/activities/harvest-crop-task.vue ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _harvest_crop_task_vue_vue_type_template_id_905e5cd2_lang_pug___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./harvest-crop-task.vue?vue&type=template&id=905e5cd2&lang=pug& */ \"./resources/js/pages/farms/activities/harvest-crop-task.vue?vue&type=template&id=905e5cd2&lang=pug&\");\n/* harmony import */ var _harvest_crop_task_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./harvest-crop-task.vue?vue&type=script&lang=js& */ \"./resources/js/pages/farms/activities/harvest-crop-task.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _harvest_crop_task_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _harvest_crop_task_vue_vue_type_template_id_905e5cd2_lang_pug___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _harvest_crop_task_vue_vue_type_template_id_905e5cd2_lang_pug___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"resources/js/pages/farms/activities/harvest-crop-task.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);\n\n//# sourceURL=webpack:///./resources/js/pages/farms/activities/harvest-crop-task.vue?");

/***/ }),

/***/ "./resources/js/pages/farms/activities/harvest-crop-task.vue?vue&type=script&lang=js&":
/*!********************************************************************************************!*\
  !*** ./resources/js/pages/farms/activities/harvest-crop-task.vue?vue&type=script&lang=js& ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_harvest_crop_task_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/babel-loader/lib!../../../../../node_modules/vue-loader/lib??vue-loader-options!./harvest-crop-task.vue?vue&type=script&lang=js& */ \"./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/farms/activities/harvest-crop-task.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_harvest_crop_task_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[\"default\"]); \n\n//# sourceURL=webpack:///./resources/js/pages/farms/activities/harvest-crop-task.vue?");

/***/ }),

/***/ "./resources/js/pages/farms/activities/harvest-crop-task.vue?vue&type=template&id=905e5cd2&lang=pug&":
/*!***********************************************************************************************************!*\
  !*** ./resources/js/pages/farms/activities/harvest-crop-task.vue?vue&type=template&id=905e5cd2&lang=pug& ***!
  \***********************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_pug_plain_loader_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_harvest_crop_task_vue_vue_type_template_id_905e5cd2_lang_pug___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/pug-plain-loader!../../../../../node_modules/vue-loader/lib??vue-loader-options!./harvest-crop-task.vue?vue&type=template&id=905e5cd2&lang=pug& */ \"./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/pug-plain-loader/index.js!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/farms/activities/harvest-crop-task.vue?vue&type=template&id=905e5cd2&lang=pug&\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_pug_plain_loader_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_harvest_crop_task_vue_vue_type_template_id_905e5cd2_lang_pug___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_pug_plain_loader_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_harvest_crop_task_vue_vue_type_template_id_905e5cd2_lang_pug___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n\n\n//# sourceURL=webpack:///./resources/js/pages/farms/activities/harvest-crop-task.vue?");

/***/ })

}]);